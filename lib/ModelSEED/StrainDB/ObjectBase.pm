use strict;
use warnings;
no warnings qw(redefine);

1;

# this class is AUTOGENERATED and will be AUTOMATICALLY REGENERATED
# all work done in this module will be LOST


package ModelSEED::StrainDB::STRAIN;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		owner => [ DB_SCALAR, undef, 0, "master" ],
		strainImplemented => [ DB_SCALAR, undef, 0, "0" ],
		parent => [ DB_SCALAR, undef, 0, "none" ],
		competance => [ DB_SCALAR, undef, 1, undef ],
		EXPERIMENTER => [ DB_SCALAR, undef, 0, undef ],
		modificationDate => [ DB_SCALAR, undef, 0, undef ],
		lineage => [ DB_SCALAR, undef, 0, "none" ],
		creationDate => [ DB_SCALAR, undef, 0, undef ],
		resistance => [ DB_SCALAR, undef, 1, undef ],
		public => [ DB_SCALAR, undef, 0, "0" ],
		experimentDate => [ DB_SCALAR, undef, 0, undef ],
		id => [ DB_SCALAR, undef, 1, undef ],
		method => [ DB_SCALAR, undef, 0, "none" ],
		strainAttempted => [ DB_SCALAR, undef, 0, "0" ],
	};
}

sub unique_indices {
     return 
		[
			[ "id" ],
		];
}

sub indices {
     return 
		[
			[ "parent" ],
			[ "method" ],
			[ "competance" ],
			[ "resistance" ],
			[ "strainAttempted" ],
			[ "strainImplemented" ],
			[ "EXPERIMENTER" ],
			[ "owner" ],
			[ "public" ],
		];
}

1;

package ModelSEED::StrainDB::CONTIG;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		owner => [ DB_SCALAR, undef, 0, "master" ],
		modificationDate => [ DB_SCALAR, undef, 0, undef ],
		creationDate => [ DB_SCALAR, undef, 0, undef ],
		stop => [ DB_SCALAR, undef, 1, undef ],
		public => [ DB_SCALAR, undef, 0, "0" ],
		id => [ DB_SCALAR, undef, 1, undef ],
		start => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
			[ "id" ],
		];
}

sub indices {
     return 
		[
			[ "owner" ],
			[ "public" ],
		];
}

1;

package ModelSEED::StrainDB::PREDICTIONS;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		STRAIN => [ DB_SCALAR, undef, 1, undef ],
		noGrowthCompounds => [ DB_SCALAR, undef, 1, undef ],
		version => [ DB_SCALAR, undef, 1, undef ],
		MEDIA => [ DB_SCALAR, undef, 1, undef ],
		description => [ DB_SCALAR, undef, 0, undef ],
		modificationDate => [ DB_SCALAR, undef, 0, undef ],
		creationDate => [ DB_SCALAR, undef, 0, undef ],
		MODEL => [ DB_SCALAR, undef, 1, undef ],
		relativeGrowth => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "STRAIN" ],
			[ "MEDIA" ],
			[ "MODEL" ],
			[ "version" ],
		];
}

1;

package ModelSEED::StrainDB::EXPERIMENTER;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		name => [ DB_SCALAR, undef, 1, undef ],
		id => [ DB_SCALAR, undef, 1, undef ],
		institution => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
			[ "id" ],
		];
}

sub indices {
     return 
		[
			[ "name" ],
			[ "institution" ],
		];
}

1;

package ModelSEED::StrainDB::PHENOTYPE;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		modificationDate => [ DB_SCALAR, undef, 0, undef ],
		STRAIN => [ DB_SCALAR, undef, 1, undef ],
		creationDate => [ DB_SCALAR, undef, 0, undef ],
		relativeGrowth => [ DB_SCALAR, undef, 1, undef ],
		MEDIA => [ DB_SCALAR, undef, 1, undef ],
		description => [ DB_SCALAR, undef, 0, undef ],
		EXPERIMENTER => [ DB_SCALAR, undef, 0, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "STRAIN" ],
			[ "MEDIA" ],
			[ "EXPERIMENTER" ],
		];
}

1;

package ModelSEED::StrainDB::STRAIN_CONTIG;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		STRAIN => [ DB_SCALAR, undef, 1, undef ],
		CONTIG => [ DB_SCALAR, undef, 1, undef ],
		deletionOrder => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "STRAIN" ],
			[ "CONTIG" ],
			[ "deletionOrder" ],
		];
}

1;

package ModelSEED::StrainDB::FEATURE;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		stop => [ DB_SCALAR, undef, 1, undef ],
		type => [ DB_SCALAR, undef, 1, undef ],
		id => [ DB_SCALAR, undef, 1, undef ],
		annotation => [ DB_SCALAR, undef, 0, "none" ],
		start => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
			[ "id" ],
		];
}

sub indices {
     return 
		[
			[ "type" ],
			[ "annotation" ],
		];
}

1;

package ModelSEED::StrainDB::FEATURE_ALIAS;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		FEATURE => [ DB_SCALAR, undef, 1, undef ],
		type => [ DB_SCALAR, undef, 1, undef ],
		alias => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "FEATURE" ],
			[ "alias" ],
			[ "type" ],
		];
}

1;

package ModelSEED::StrainDB::CONTIGPRIMER;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		CONTIG => [ DB_SCALAR, undef, 1, undef ],
		sequence => [ DB_SCALAR, undef, 1, undef ],
		stop => [ DB_SCALAR, undef, 1, undef ],
		type => [ DB_SCALAR, undef, 1, undef ],
		start => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "CONTIG" ],
			[ "sequence" ],
			[ "type" ],
		];
}

1;

package ModelSEED::StrainDB::FEATURE_CONTIG;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		CONTIG => [ DB_SCALAR, undef, 1, undef ],
		FEATURE => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "FEATURE" ],
			[ "CONTIG" ],
		];
}

1;
